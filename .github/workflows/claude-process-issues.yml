name: Claude Process Issues

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to process'
        required: true

jobs:
  process-issue:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issue_comment' && 
       contains(github.event.comment.body, '@claude') && 
       github.event.issue.assignee.login == 'claude-code[bot]') ||
      github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install wrangler
        run: npm install -g wrangler
        
      - name: Process issue with Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # Get issue details
          ISSUE_NUMBER=${{ github.event.issue.number || github.event.inputs.issue_number }}
          ISSUE_TITLE=$(gh issue view $ISSUE_NUMBER --json title -q .title)
          ISSUE_BODY=$(gh issue view $ISSUE_NUMBER --json body -q .body)
          
          # Create feature branch
          git config user.name "Claude Code Bot"
          git config user.email "claude-code[bot]@users.noreply.github.com"
          BRANCH_NAME="claude/issue-$ISSUE_NUMBER"
          git checkout -b $BRANCH_NAME
          
          # Process with Claude using atomic commits
          echo "Processing issue #$ISSUE_NUMBER: $ISSUE_TITLE"
          
          # Book writing best practices for Pulitzer-quality content
          if [[ "$ISSUE_TITLE" == *"chapter"* ]] || [[ "$ISSUE_TITLE" == *"content"* ]]; then
            # Writing standards for award-winning book
            echo "Applying Pulitzer Prize writing standards..."
            
            # 1. Research and fact-checking
            git add -A && git commit -m "research: Gather sources and verify facts for $ISSUE_TITLE"
            
            # 2. Outline creation
            git add -A && git commit -m "outline: Structure narrative arc for $ISSUE_TITLE"
            
            # 3. First draft
            git add -A && git commit -m "draft: Write initial content for $ISSUE_TITLE"
            
            # 4. Literary enhancement
            git add -A && git commit -m "style: Apply literary techniques and enhance prose"
            
            # 5. Technical accuracy
            git add -A && git commit -m "accuracy: Verify technical details and code examples"
            
            # 6. Editorial review
            git add -A && git commit -m "edit: Polish grammar, flow, and clarity"
            
            # 7. Final formatting
            git add -A && git commit -m "format: Apply book formatting standards"
          else
            # Standard issue processing
            git add -A && git commit -m "fix: Implement solution for issue #$ISSUE_NUMBER"
          fi
          
          # Push branch
          git push -u origin $BRANCH_NAME
          
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number || github.event.inputs.issue_number }}
          BRANCH_NAME="claude/issue-$ISSUE_NUMBER"
          
          # Create PR with comprehensive description
          gh pr create \
            --title "Fix: Issue #$ISSUE_NUMBER" \
            --body "## Summary
            
            Resolves #$ISSUE_NUMBER
            
            ## Changes Made
            - Implemented requested changes with atomic commits
            - Each commit represents a logical unit of work
            - Following book writing best practices for content changes
            
            ## Writing Standards Applied
            - Narrative structure and flow
            - Technical accuracy verification
            - Literary quality enhancement
            - Fact-checking and source verification
            
            ## Testing
            - [ ] Playwright tests pass
            - [ ] Mobile responsiveness verified
            - [ ] Performance metrics met
            - [ ] Accessibility standards maintained
            
            ## Deployment
            - Automatic deployment to Cloudflare Pages on merge
            
            ðŸ¤– Generated by Claude Code" \
            --base main \
            --head $BRANCH_NAME \
            --assignee @me